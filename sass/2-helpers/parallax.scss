// perspective
@mixin perspective($perspective) {
    -moz-perspective: $perspective;
    -webkit-perspective: $perspective;
    perspective: $perspective;
}

// transform-style
@mixin transform-style($transform-style){
    -moz-transform-style: $transform-style;
    -webkit-transform-style: $transform-style;
    transform-style: $transform-style;
}

// generic transform
@mixin transform($transform){
    -moz-transform: $transform;
    -o-transform: $transform;
    -ms-transform: $transform;
    -webkit-transform: $transform;
    transform: $transform;
}

// scale
@mixin scale($scale) {
   @include transform(scale($scale));
}

// translate
@mixin translate ($x, $y, $z) {
   @include transform(translate($x, $y, $z));
}

$parallax-perspective : 1 !default;

@mixin parallax(
  $distance    : 0,
  $perspective : $parallax-perspective
  ) {
  @include transform(
    translateZ($distance * $perspective * 1px)
    scale(abs($distance - 1))
  );
  z-index: $distance * 1000;
}


body {
  overflow: auto;
  @include perspective(1px);
  @include transform-style(preserve-3d);
}

